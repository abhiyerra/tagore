#!/usr/bin/env ruby

require 'rubygems'
require 'typhoeus'
# require "getopt/long"

# opt = Getopt::Long.getopts(
#   ["--shared", "-s", Getopt::BOOLEAN])

HANNIBAL_FILE = "Hannibal"

command = ARGV[0]

case command.downcase
when "service:create"
  name = ARGV[1]
  shared = true if ARGV[2] # TODO: Uhhhh.... yeah...

  puts "Creating #{name}"
  response = Typhoeus::Request.post("http://localhost:3001/services", :params => {
     :service => {
        :name => name,
      }
    }.merge(shared ? { :shared => "1" } : {}))

  `echo #{name} > Hannibal`

  puts "Created #{name} with #{response.code}"

when "resources:list"
  unless File.exists?(File.join(Dir.pwd, HANNIBAL_FILE))
    puts "Don't have a Hannibal file mate."
    exit 1
  end

  file = File.open(File.join(Dir.pwd, HANNIBAL_FILE)).read
  name = file.chomp

  response = Typhoeus::Request.get("http://localhost:3001/resources", :params => {
      :service => {
        :name => name
      }
    })

  puts response.body

when "resources:add"
  unless File.exists?(File.join(Dir.pwd, HANNIBAL_FILE))
    puts "Don't have a Hannibal file mate."
    exit 1
  end

  file = File.open(File.join(Dir.pwd, HANNIBAL_FILE)).read
  name = file.chomp

  resource = ARGV[1]

  case resource
  when "redis"
  when "mongo"
  when "memcached"
  else
    puts "The hell are you talking about. wtf is #{resource}?"
    exit 1
  end

  response = Typhoeus::Request.post("http://localhost:3001/resources", :params => {
      :service => {
        :name => name
      },
      :resource_type => resource,
    })

  puts response.body
end
